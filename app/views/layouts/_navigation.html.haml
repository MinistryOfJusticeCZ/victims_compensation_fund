-# navigation styled for Bootstrap 4.0
.container-fluid
  %nav.navbar.navbar-expand-md.navbar-light
    %button.navbar-toggler.navbar-toggler-right{"aria-controls" => "exCollapsingNavbar2", "aria-expanded" => "false", "aria-label" => "Toggle navigation", "data-target" => "#exCollapsingNavbar2", "data-toggle" => "collapse", :type => "button"}
      %span.navbar-toggler-icon
    = link_to main_app.root_path, class: 'navbar-brand' do
      = image_tag('logo.svg', height: '50', style: 'margin-top: -0.5rem;')
    #exCollapsingNavbar2.collapse.navbar-collapse
      %ul.nav.navbar-nav.mr-auto.main-menu
      %ul.nav.navbar-nav

        - if can?(:create, Redemption) || can?(:read, Redemption)
          %li.nav-item.dropdown
            = link_to 'javascript:void(0)', id: 'navbarPaymentDropdownLink', class: 'nav-link dropdown-toggle', data: {toggle: 'dropdown'} do
              = Redemption.model_name.human(count: :other)
              - if can? :manage, Redemption
                %span.badge.badge-info= RedemptionSchema.new.tap{|s| s.default_scope = 'unprocessed_paid'}.entity_count
            .dropdown-menu.dropdown-menu-right{'aria-labelledby' => 'navbarPaymentDropdownLink'}
              - if can? :create, Redemption
                = link_to t('label_new'), main_app.new_redemption_path, class: 'dropdown-item'
              - if can? :read, Redemption
                = link_to t('label_list'), main_app.redemptions_path, class: 'dropdown-item'
        - if can?(:create, Appeal) || can?(:read, Appeal)
          %li.nav-item.dropdown
            = link_to 'javascript:void(0)', id: 'navbarAppealDropdownLink', class: 'nav-link dropdown-toggle', data: {toggle: 'dropdown'} do
              = Appeal.model_name.human(count: :other)
            .dropdown-menu.dropdown-menu-right{'aria-labelledby' => 'navbarAppealDropdownLink'}
              - if can? :create, Appeal
                = link_to t('label_new'), main_app.new_appeal_path, class: 'dropdown-item'
              - if can? :read, Appeal
                = link_to t('label_list'), main_app.appeals_path, class: 'dropdown-item'
        - if can?(:manage, EgovUtils::User)
          %li.nav-item.dropdown
            = link_to 'javascript:void(0)', id: 'navbarAdminDropdownLink', class: 'nav-link dropdown-toggle', aria: {haspopup: true}, data: {toggle: 'dropdown'} do
              = 'Admin'
            .dropdown-menu.dropdown-menu-right{'aria-labelledby' => 'navbarAdminDropdownLink'}
              = link_to EgovUtils::User.model_name.human, egov_utils.users_path, class: 'dropdown-item'
              = link_to EgovUtils::User.human_attribute_name('roles'), egov_utils.roles_path, class: 'dropdown-item'
      - if current_user.logged?
        %ul.nav.navbar-nav
          %li.nav-item.dropdown.user-drop
            = link_to 'javascript:void(0)', id: 'navbarUserDropdownLink', class: 'nav-link dropdown-toggle', data: {toggle: 'dropdown'} do
              %i.fa.fa-user-circle.fa-lg
              = current_user.fullname
            .dropdown-menu.dropdown-menu-right{'aria-labelledby' => 'navbarUserDropdownLink'}
              = link_to t('label_profile'), egov_utils.user_path(current_user), class: 'dropdown-item'
              = link_to t('label_change_password'), egov_utils.edit_password_path(current_user), class: 'dropdown-item'
              = link_to t('label_logout'), egov_utils.signout_path, class: 'dropdown-item', method: :delete
      - else
        %ul.nav.navbar-nav
          %li.nav-item= link_to t('label_login'), egov_utils.signin_path
  - if Rails.env.staging?
    .alert.alert-warning.d-flex.flex-row
      %button.mr-2.align-self-center.close{'type' => 'button', 'data-dismiss' => 'alert'}
        %i.fa.fa-exclamation-triangle
      %div= t('warning_staging_version')
